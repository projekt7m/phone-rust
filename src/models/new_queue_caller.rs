/*
 * Phone and Queue Backend
 *
 * API for managing phone services  This is the API of the service at P7M that manages phone services.  **Attention:** this API will probably still change a lot in the future, it's not at all stable yet
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// NewQueueCaller : Subset of QueueCaller with data needed to create a new instance of QueueCaller
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NewQueueCaller {
    /// The number to caller called
    #[serde(rename = "queueNumberId")]
    pub queue_number_id: uuid::Uuid,
    /// CLIP of the number, if known (empty else)
    #[serde(rename = "callerNumber")]
    pub caller_number: String,
    /// Priority of the call (higher number is higher priority)
    #[serde(rename = "prio")]
    pub prio: i32,
    /// The state this call is in, for NewQueueCaller this probably should be 'INTRO'
    #[serde(rename = "callState")]
    pub call_state: models::CallState,
    /// The timestamp when the call started
    #[serde(rename = "startTime")]
    pub start_time: String,
}

impl NewQueueCaller {
    /// Subset of QueueCaller with data needed to create a new instance of QueueCaller
    pub fn new(queue_number_id: uuid::Uuid, caller_number: String, prio: i32, call_state: models::CallState, start_time: String) -> NewQueueCaller {
        NewQueueCaller {
            queue_number_id,
            caller_number,
            prio,
            call_state,
            start_time,
        }
    }
}

