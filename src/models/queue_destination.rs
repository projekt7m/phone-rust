/*
 * Phone and Queue Backend
 *
 * API for managing phone services  This is the API of the service at P7M that manages phone services.  **Attention:** this API will probably still change a lot in the future, it's not at all stable yet
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// QueueDestination : Destination where calls within the queue will ring on
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueueDestination {
    /// ID of this destination
    #[serde(rename = "queueDestinationId")]
    pub queue_destination_id: uuid::Uuid,
    /// The tenant this destination belongs to
    #[serde(rename = "tenantId")]
    pub tenant_id: uuid::Uuid,
    /// Minimum priority a call needs to get signalled on this destination
    #[serde(rename = "prioMin")]
    pub prio_min: i32,
    /// Maximum priority a call can have to get signalled on this destination
    #[serde(rename = "prioMax")]
    pub prio_max: i32,
    /// Phone number where to ring (E.164 format including '+' prefix)
    #[serde(rename = "destination")]
    pub destination: String,
    /// Name of this destination for representation on the UI
    #[serde(rename = "description")]
    pub description: String,
    /// When this destination has changed the last time
    #[serde(rename = "lastChange")]
    pub last_change: String,
}

impl QueueDestination {
    /// Destination where calls within the queue will ring on
    pub fn new(queue_destination_id: uuid::Uuid, tenant_id: uuid::Uuid, prio_min: i32, prio_max: i32, destination: String, description: String, last_change: String) -> QueueDestination {
        QueueDestination {
            queue_destination_id,
            tenant_id,
            prio_min,
            prio_max,
            destination,
            description,
            last_change,
        }
    }
}

