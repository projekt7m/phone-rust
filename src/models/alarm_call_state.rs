/*
 * Phone and Queue Backend
 *
 * API for managing phone services  This is the API of the service at P7M that manages phone services.  **Attention:** this API will probably still change a lot in the future, it's not at all stable yet
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AlarmCallState {
    #[serde(rename = "REQUESTED")]
    Requested,
    #[serde(rename = "AUDIO_EXISTS")]
    AudioExists,
    #[serde(rename = "SPOOLED")]
    Spooled,
    #[serde(rename = "CONNECTED")]
    Connected,
    #[serde(rename = "PRESSED_DIGIT")]
    PressedDigit,
    #[serde(rename = "CALLEE_HANGUP")]
    CalleeHangup,
    #[serde(rename = "DIALER_HANGUP")]
    DialerHangup,
    #[serde(rename = "CALLED_BACK")]
    CalledBack,
    #[serde(rename = "CALLBACK_ENDED")]
    CallbackEnded,
    #[serde(rename = "CANCELED")]
    Canceled,
    #[serde(rename = "DUMMY")]
    Dummy,

}

impl std::fmt::Display for AlarmCallState {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Requested => write!(f, "REQUESTED"),
            Self::AudioExists => write!(f, "AUDIO_EXISTS"),
            Self::Spooled => write!(f, "SPOOLED"),
            Self::Connected => write!(f, "CONNECTED"),
            Self::PressedDigit => write!(f, "PRESSED_DIGIT"),
            Self::CalleeHangup => write!(f, "CALLEE_HANGUP"),
            Self::DialerHangup => write!(f, "DIALER_HANGUP"),
            Self::CalledBack => write!(f, "CALLED_BACK"),
            Self::CallbackEnded => write!(f, "CALLBACK_ENDED"),
            Self::Canceled => write!(f, "CANCELED"),
            Self::Dummy => write!(f, "DUMMY"),
        }
    }
}

impl Default for AlarmCallState {
    fn default() -> AlarmCallState {
        Self::Requested
    }
}

