/*
 * Phone and Queue Backend
 *
 * API for managing phone services  This is the API of the service at P7M that manages phone services.  **Attention:** this API will probably still change a lot in the future, it's not at all stable yet
 *
 * The version of the OpenAPI document: 0.7.0
 * Contact: tech@p7m.de
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// QueueCallerUpdate : Fields of QueueCaller that can be updated  Fields that should not be updated can be left out
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct QueueCallerUpdate {
    /// The priority of the call
    #[serde(rename = "prio", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub prio: Option<Option<i32>>,
    /// The state this call is in
    #[serde(rename = "callState", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub call_state: Option<Option<models::CallState>>,
}

impl QueueCallerUpdate {
    /// Fields of QueueCaller that can be updated  Fields that should not be updated can be left out
    pub fn new() -> QueueCallerUpdate {
        QueueCallerUpdate {
            prio: None,
            call_state: None,
        }
    }
}

